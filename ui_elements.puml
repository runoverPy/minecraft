@startuml
class game.assets.ui_elements.DropDownSelector {
- EnumBuffer<E> buffer
- E[] listVariants()
+ void draw(int,Matrix4f)
}
class game.assets.ui_elements.ToggleButton {
- EnumBuffer<E> buffer
+ boolean onMouseEvent(MouseEvent,int)
}
abstract class game.assets.ui_elements.AbstractButton {
# ColorBox buttonFrame
# ImageBox buttonImage
# TextBox description
# {static} Image filler
+ void draw(int,Matrix4f)
}
abstract class game.assets.ui_elements.ChildBox {
- int width
- int height
- Component parent
- int xOffset
- int yOffset
+ int getCenterX(int)
+ int getCenterY(int)
+ void setParent(Component)
+ int getCornerX(int)
+ int getCornerY(int)
+ int getPixelScale()
+ Component getParent()
+ {abstract}void draw(int,Matrix4f)
+ boolean onMouseEvent(MouseEvent,int)
+ int getWidth()
+ int getHeight()
+ int getWidth(int)
+ int getHeight(int)
+ void setXOffset(int)
+ int getXOffset(int)
+ void setYOffset(int)
+ int getYOffset(int)
+ int getXOffset()
+ int getYOffset()
+ void setOffset(int,int)
# boolean isWithin(MouseEvent,int)
# boolean isWithin(double,double,int)
# boolean isHovering(int)
+ int getPxScale()
}
interface game.assets.ui_elements.Widget {
~ ChildBox create(int,int,int,int,Component)
~ {static} Widget button(String,Runnable)
~ {static} Widget button(String,BoolBuffer)
~ {static} Widget button(String,EnumBuffer<E>)
~ {static} Widget query(StringBuffer)
~ {static} Widget slider(String,FloatBuffer)
~ {static} Widget slider(String,FloatBuffer,float,float)
~ {static} Widget slider(String,IntBuffer,int,int)
~ {static} Widget textBox(String,boolean,boolean)
}
class game.assets.ui_elements.Query {
- ColorBox queryFrame
- ColorBox queryField
- StringBuffer contents
- boolean selected
- CooldownKeyInput backspace
- {static} Runnable onLeave
- GLFWCharCallbackI charCallback
- void addChar(char)
- void select()
- void leave()
- void toggleSelect()
+ void draw(int,Matrix4f)
+ boolean onMouseEvent(MouseEvent,int)
}
class game.assets.ui_elements.ContentsPane {
- ChildBox rootComponent
+ Component getRoot()
+ void setRoot(ChildBox)
+ void render()
+ int getWidth()
+ int getHeight()
+ int getWidth(int)
+ int getHeight(int)
+ int getCornerX(int)
+ int getCornerY(int)
+ int getPxScale()
}
class game.assets.ui_elements.ScrollBarY {
- double value
- Knob knob
+ void draw(int,Matrix4f)
+ double getValue()
+ boolean onMouseEvent(MouseEvent,int)
}
class game.assets.ui_elements.ScrollBarY.Knob {
- boolean clicked
- int clickOffset
+ void draw(int,Matrix4f)
+ int getCornerY(int)
+ boolean onMouseEvent(MouseEvent,int)
}
abstract class game.assets.ui_elements.TileBox {
- {static} float[] tileVertices
# {static} int vertices
}
class game.assets.ui_elements.TextBox {
- String text
- boolean centered
- boolean shaded
+ String getText()
+ void setText(String)
+ void draw(int,Matrix4f)
- void drawLine(Matrix4f,String,Vector4f)
}
class game.assets.ui_elements.ContentFrame {
- List<ChildBox> contents
- ScrollBarY scrollBar
- int contentsLength()
+ void draw(int,Matrix4f)
+ boolean onMouseEvent(MouseEvent,int)
}
class game.assets.ui_elements.SwitchButton {
- BoolBuffer buffer
+ boolean onMouseEvent(MouseEvent,int)
}
class game.assets.ui_elements.ContainerBox {
# List<ChildBox> children
- int contentsLength()
+ void addChild(ChildBox)
+ void draw(int,Matrix4f)
+ boolean onMouseEvent(MouseEvent,int)
}
interface game.assets.ui_elements.Component {
~ int getWidth()
~ int getHeight()
~ int getWidth(int)
~ int getHeight(int)
~ int getCornerX(int)
~ int getCornerY(int)
~ int getPxScale()
}
class game.assets.ui_elements.ColorBox {
- {static} float[] buttonVertices
- {static} int vertices
- {static} int program
- {static} int transform
- {static} int color
- Vector4f boxColor
+ Vector4f getBoxColor()
+ void setBoxColor(Vector4f)
+ void draw(int,Matrix4f)
}
class game.assets.ui_elements.Button {
- Runnable callback
+ void draw(int,Matrix4f)
+ boolean onMouseEvent(MouseEvent,int)
}
class game.assets.ui_elements.Slider {
- double sliderValue
- String name
- NumericBuffer<T> value
- Function<Double,T> converter
- Function<T,Double> invConverter
- ColorBox scrollRail
- Knob knob
~ {static} Slider<Float> floatSlider(int,int,int,int,Component,String,FloatBuffer)
~ {static} Slider<Float> scaleSlider(int,int,int,int,Component,String,FloatBuffer,float,float)
~ {static} Slider<Integer> rangeSlider(int,int,int,int,Component,String,IntBuffer,int,int)
+ void draw(int,Matrix4f)
+ boolean onMouseEvent(MouseEvent,int)
+ double getValue()
}
class game.assets.ui_elements.Slider.Knob {
- boolean clicked
- int clickOffset
+ int getCornerX(int)
+ void draw(int,Matrix4f)
+ boolean onMouseEvent(MouseEvent,int)
}
class game.assets.ui_elements.Hotbar {
- {static} int sideLen
- {static} int spacing
- String[] items
- int selectedSlot
~ ImageBox frame
+ {static} Hotbar demoHotbar()
+ void select(int)
+ void incSelect()
+ void decSelect()
+ void setItem(int,String)
+ String getItem(int)
+ void setItem(String)
+ String getItem()
- void checkSlot(int)
+ void draw(Matrix4f)
+ int getCornerY(int)
+ void draw(int,Matrix4f)
}
enum game.assets.ui_elements.ElementSizes {
+  XS
+  S
+  M
+  L
- int aspectRatio
+ int getAspectRatio()
}
class game.assets.ui_elements.MouseEvent {
+ EventType eventType
+ double mouseX
}
enum game.assets.ui_elements.EventType {
+  PRESSED
+  RELEASED
}
class game.assets.ui_elements.FlexBox {
+ void draw(int,Matrix4f)
+ int getCornerX(int)
+ int getCornerY(int)
+ int getPixelScale()
+ int getPxScale()
}
class game.assets.ui_elements.ImageBox {
- Image image
- int texture
+ void draw(int,Matrix4f)
}


game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.DropDownSelector
game.assets.ui_elements.AbstractButton <|-- game.assets.ui_elements.ToggleButton
game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.AbstractButton
game.assets.ui_elements.Component <|.. game.assets.ui_elements.ChildBox
game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.Query
game.assets.ui_elements.Component <|.. game.assets.ui_elements.ContentsPane
game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.ScrollBarY
game.assets.ui_elements.ScrollBarY +.. game.assets.ui_elements.ScrollBarY.Knob
game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.ScrollBarY.Knob
game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.TileBox
game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.TextBox
game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.ContentFrame
game.assets.ui_elements.AbstractButton <|-- game.assets.ui_elements.SwitchButton
game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.ContainerBox
game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.ColorBox
game.assets.ui_elements.AbstractButton <|-- game.assets.ui_elements.Button
game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.Slider
game.assets.ui_elements.Slider +.. game.assets.ui_elements.Slider.Knob
game.assets.ui_elements.ChildBox <|-- game.assets.ui_elements.Slider.Knob
game.assets.ui_elements.FlexBox <|-- game.assets.ui_elements.Hotbar
game.assets.ui_elements.ContainerBox <|-- game.assets.ui_elements.FlexBox
game.assets.ui_elements.TileBox <|-- game.assets.ui_elements.ImageBox
@enduml